{"version":3,"sources":["components/Header/Header.jsx","components/Footer/Footer.jsx","components/App/App.jsx","requests/request.js"],"names":["Header","state","data","upcomingLaunch","day","month","year","mission","link","componentDidMount","a","request","get","params","order","response","filter","item","upcoming","setState","defineLaunchDate","console","log","message","today","Date","reduce","b","formateDate","setMissionLink","formatedDate","launch_date_utc","formatedMonth","getMonth","formatedDay","getDate","formatedYear","getFullYear","length","mission_name","links","reddit_campaign","className","exact","to","href","this","target","rel","Component","Footer","App","children","axios","create","baseURL"],"mappings":"6NAMqBA,G,kNACnBC,MAAQ,CACNC,KAAM,GACNC,eAAgB,GAChBC,IAAK,EACLC,MAAO,EACPC,KAAM,EACNC,QAAS,GACTC,KAAM,I,EAERC,kB,sBAAoB,8BAAAC,EAAA,+EAEOC,IAAQC,IAAI,YAAa,CAC9CC,OAAQ,CAAEC,MAAO,UAHH,OAEVC,EAFU,OAMVb,EAAOa,EAASb,KAAKc,QAAO,SAAAC,GAChC,OAAyB,IAAlBA,EAAKC,YAEd,EAAKC,SAAS,CAAEjB,SAEhB,EAAKkB,mBAXW,gDAahBC,QAAQC,IAAI,KAAMC,SAbF,yD,EAiBpBH,iBAAmB,WACjB,IAAMI,EAAQ,IAAIC,KACZtB,EAAiB,EAAKF,MAAMC,KAAKwB,QAAO,SAAChB,EAAGiB,GAAJ,OAC5CjB,EAAEe,KAAOD,EAAQG,EAAEF,KAAOD,EAAQd,EAAIiB,KAExC,EAAKR,SAAS,CAAEhB,mBAChB,EAAKyB,cACL,EAAKC,kB,EAGPD,YAAc,WACZ,IAAME,EAAe,IAAIL,KAAK,EAAKxB,MAAME,eAAe4B,iBAEpDC,EAAgB,IAAMF,EAAaG,WAAa,GAChDC,EAAc,GAAKJ,EAAaK,UAC9BC,EAAeN,EAAaO,cAE9BL,EAAcM,OAAS,IAAGN,EAAgB,IAAMA,GAChDE,EAAYI,OAAS,IAAGJ,EAAc,IAAMA,GAEhD,EAAKf,SAAS,CACZf,IAAK8B,EACL7B,MAAO2B,EACP1B,KAAM8B,K,EAIVP,eAAiB,WACf,IAAMtB,EAAU,EAAKN,MAAME,eAAeoC,aACpC/B,EAAO,EAAKP,MAAME,eAAeqC,MAAMC,gBAC7C,EAAKtB,SAAS,CAAEZ,UAASC,U,wEAIzB,OACE,4BAAQkC,UAAU,UAChB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,cACb,wBAAIA,UAAU,OACZ,4BACE,kBAAC,IAAD,CAASC,OAAK,EAACC,GAAI,IAAKF,UAAU,aAAlC,aAIF,4BACE,kBAAC,IAAD,CAASE,GAAI,WAAYF,UAAU,aAAnC,YAIF,4BACE,kBAAC,IAAD,CAASE,GAAI,WAAYF,UAAU,aAAnC,cAMN,yBAAKA,UAAU,mBACb,wBAAIA,UAAU,sCAAd,mBAGA,uBACEG,KAAMC,KAAK7C,MAAMO,KACjBkC,UAAU,mBACVK,OAAO,SACPC,IAAI,uBAJN,WAMWF,KAAK7C,MAAMM,SAGtB,yBAAKmC,UAAU,QACb,wBAAIA,UAAU,eAAd,iBACA,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,iBACZI,KAAK7C,MAAMG,IADd,IACmB,0BAAMsC,UAAU,cAAhB,QAEnB,yBAAKA,UAAU,iBACZI,KAAK7C,MAAMI,MADd,IACqB,0BAAMqC,UAAU,cAAhB,UAErB,yBAAKA,UAAU,iBACZI,KAAK7C,MAAMK,KADd,IACoB,0BAAMoC,UAAU,cAAhB,UAGtB,uBACEG,KAAK,2DACLH,UAAU,aACVK,OAAO,SACPC,IAAI,uBAJN,aAQA,uBAAGN,UAAU,qBAAb,yI,GArHsBO,cCFvBC,G,OAAS,WACpB,OACE,oCACE,4BAAQR,UAAU,UAChB,yBAAKA,UAAU,aACb,uBAAGA,UAAU,gBAAb,2DAC2D,IACzD,uBACEG,KAAK,8CACLH,UAAU,eACVK,OAAO,SACPC,IAAI,uBAJN,c,OCGGG,UARH,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACV,kBAAC,WAAD,KACE,kBAAC,EAAD,MACCA,EACD,kBAAC,EAAD,S,iCCVJ,+CAEazC,EAFb,OAEuB0C,EAAMC,OAAO,CAClCC,QAAS,mC","file":"static/js/8.714d2c71.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { request } from \"../../requests/request\";\r\n\r\nimport \"./Header.scss\";\r\n\r\nexport default class Header extends Component {\r\n  state = {\r\n    data: [],\r\n    upcomingLaunch: {},\r\n    day: 0,\r\n    month: 0,\r\n    year: 0,\r\n    mission: \"\",\r\n    link: \"\"\r\n  };\r\n  componentDidMount = async () => {\r\n    try {\r\n      const response = await request.get(\"/launches\", {\r\n        params: { order: \"desc\" }\r\n      });\r\n\r\n      const data = response.data.filter(item => {\r\n        return item.upcoming === true;\r\n      });\r\n      this.setState({ data });\r\n\r\n      this.defineLaunchDate();\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n\r\n  defineLaunchDate = () => {\r\n    const today = new Date();\r\n    const upcomingLaunch = this.state.data.reduce((a, b) =>\r\n      a.Date - today < b.Date - today ? a : b\r\n    );\r\n    this.setState({ upcomingLaunch });\r\n    this.formateDate();\r\n    this.setMissionLink();\r\n  };\r\n\r\n  formateDate = () => {\r\n    const formatedDate = new Date(this.state.upcomingLaunch.launch_date_utc);\r\n\r\n    let formatedMonth = \"\" + (formatedDate.getMonth() + 1);\r\n    let formatedDay = \"\" + formatedDate.getDate();\r\n    const formatedYear = formatedDate.getFullYear();\r\n\r\n    if (formatedMonth.length < 2) formatedMonth = \"0\" + formatedMonth;\r\n    if (formatedDay.length < 2) formatedDay = \"0\" + formatedDay;\r\n\r\n    this.setState({\r\n      day: formatedDay,\r\n      month: formatedMonth,\r\n      year: formatedYear\r\n    });\r\n  };\r\n\r\n  setMissionLink = () => {\r\n    const mission = this.state.upcomingLaunch.mission_name;\r\n    const link = this.state.upcomingLaunch.links.reddit_campaign;\r\n    this.setState({ mission, link });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"header\">\r\n        <div className=\"container\">\r\n          <nav className=\"navigation\">\r\n            <ul className=\"nav\">\r\n              <li>\r\n                <NavLink exact to={\"/\"} className=\"nav__link\">\r\n                  Launches\r\n                </NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink to={\"/dragons\"} className=\"nav__link\">\r\n                  Dragons\r\n                </NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink to={\"/rockets\"} className=\"nav__link\">\r\n                  Rockets\r\n                </NavLink>\r\n              </li>\r\n            </ul>\r\n          </nav>\r\n          <div className=\"header__content\">\r\n            <h1 className=\"section-title section-title_header\">\r\n              Upcoming launch\r\n            </h1>\r\n            <a\r\n              href={this.state.link}\r\n              className=\"header__subtitle\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              Mission {this.state.mission}\r\n            </a>\r\n\r\n            <div className=\"date\">\r\n              <h3 className=\"date__title\">Launching on </h3>\r\n              <div className=\"date__wrapper\">\r\n                <div className=\"date__content\">\r\n                  {this.state.day} <span className=\"date__span\">day</span>\r\n                </div>\r\n                <div className=\"date__content\">\r\n                  {this.state.month} <span className=\"date__span\">month</span>\r\n                </div>\r\n                <div className=\"date__content\">\r\n                  {this.state.year} <span className=\"date__span\">year</span>\r\n                </div>\r\n              </div>\r\n              <a\r\n                href=\"https://www.youtube.com/channel/UCtI0Hodo5o5dUb67FeUjDeA\"\r\n                className=\"date__link\"\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n              >\r\n                Remind me\r\n              </a>\r\n              <p className=\"date__description\">\r\n                Subscribe to the SpaceX channel on Youtube. All launches\r\n                broadcasts are held here. Click on the bell to receive\r\n                notifications\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nimport \"./Footer.scss\";\r\n\r\nexport const Footer = () => {\r\n  return (\r\n    <>\r\n      <footer className=\"footer\">\r\n        <div className=\"container\">\r\n          <p className=\"footer__text\">\r\n            All information on this page is based on API, taken from{\" \"}\r\n            <a\r\n              href=\"https://docs.spacexdata.com/?version=latest\"\r\n              className=\"footer__link\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              here\r\n            </a>\r\n          </p>\r\n        </div>\r\n      </footer>\r\n    </>\r\n  );\r\n};\r\n","import React, { Fragment } from \"react\";\r\n\r\nimport Header from \"../Header/Header\";\r\nimport { Footer } from \"../Footer/Footer\";\r\nimport \"./App.scss\";\r\n\r\nconst App = ({ children }) => (\r\n  <Fragment>\r\n    <Header />\r\n    {children}\r\n    <Footer />\r\n  </Fragment>\r\n);\r\n\r\nexport default App;\r\n","import axios from \"axios\";\r\n\r\nexport const request = axios.create({\r\n  baseURL: \"https://api.spacexdata.com/v3\"\r\n});\r\n"],"sourceRoot":""}