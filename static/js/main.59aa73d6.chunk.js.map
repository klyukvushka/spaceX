{"version":3,"sources":["Table.jsx","Search.jsx","App.jsx","index.js"],"names":["Table","className","this","props","data","map","item","key","flight_number","mission_name","date","d","Date","month","getMonth","day","getDate","year","getFullYear","length","join","formatDate","launch_date_utc","rocket","rocket_name","rocket_type","launch_success","Component","SearchForm","state","elements","onSubmit","e","preventDefault","handleChange","filteredData","filter","toLowerCase","search","target","value","setState","type","placeholder","onChange","onClick","updateElements","instance","axios","create","baseURL","App","offset","perPage","currentPage","componentDidMount","get","then","response","pageCount","Math","ceil","setElementsForCurrentPage","sortDesc","sortAsc","handlePageClick","selectedPage","selected","slice","paginationElement","previousLabel","nextLabel","breakLabel","breakClassName","onPageChange","containerClassName","activeClassName","pageClassName","pageLinkClassName","previousClassName","nextClassName","previousLinkClassName","nextLinkClassName","forcePage","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.59aa73d6.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nexport default class Table extends Component {\r\n  render() {\r\n    function formatDate(date) {\r\n      var d = new Date(date),\r\n        month = \"\" + (d.getMonth() + 1),\r\n        day = \"\" + d.getDate(),\r\n        year = d.getFullYear();\r\n\r\n      if (month.length < 2) month = \"0\" + month;\r\n      if (day.length < 2) day = \"0\" + day;\r\n\r\n      return [day, month, year].join(\".\");\r\n    }\r\n\r\n    function formatSuccess(parameter) {\r\n      if (!parameter) return \"failure\";\r\n      else return \"success\";\r\n    }\r\n\r\n    return (\r\n      <table className=\"launch__table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Flight №</th>\r\n            <th>Mission Name</th>\r\n            <th>Date</th>\r\n            <th>Rocket Name</th>\r\n            <th>Rocket Type</th>\r\n            <th>Success</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {this.props.data.map(item => (\r\n            <tr key={item.flight_number}>\r\n              <td>{item.flight_number}.</td>\r\n              <td>{item.mission_name}</td>\r\n              <td>{formatDate(item.launch_date_utc)}</td>\r\n              <td>{item.rocket.rocket_name}</td>\r\n              <td>{item.rocket.rocket_type}</td>\r\n              <td>{formatSuccess(item.launch_success)}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nexport default class SearchForm extends Component {\r\n  state = {\r\n    elements: []\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  handleChange = e => {\r\n    let filteredData = this.props.data.filter(item => {\r\n      return (\r\n        item.mission_name.toLowerCase().search(e.target.value.toLowerCase()) !==\r\n        -1\r\n      );\r\n    });\r\n\r\n    this.setState({ elements: filteredData });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"form\" onSubmit={this.onSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          placeholder=\"Type mission name for search...\"\r\n          onChange={this.handleChange}\r\n        />\r\n        <button\r\n          type=\"submit\"\r\n          className=\"btn btn-success\"\r\n          onClick={() => {\r\n            this.props.updateElements(this.state.elements);\r\n          }}\r\n        >\r\n          Search\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport \"./App.scss\";\r\nimport Table from \"./Table\";\r\nimport SearchForm from \"./Search\";\r\nimport axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"https://api.spacexdata.com/v3/launches\"\r\n});\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    data: [],\r\n    offset: 0,\r\n    elements: [],\r\n    perPage: 30,\r\n    currentPage: 0\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    instance.get().then(response => {\r\n      this.setState(\r\n        {\r\n          data: response.data,\r\n          pageCount: Math.ceil(response.data.length / this.state.perPage)\r\n        },\r\n        () => this.setElementsForCurrentPage()\r\n      );\r\n    });\r\n  };\r\n\r\n  setElementsForCurrentPage() {\r\n    let elements = this.state.data.slice(\r\n      this.state.offset,\r\n      this.state.offset + this.state.perPage\r\n    );\r\n\r\n    this.setState({ elements: elements });\r\n  }\r\n\r\n  sortDesc = () => {\r\n    instance.get(\"?order=desc\").then(response => {\r\n      const data = response.data;\r\n      this.setState({ data });\r\n    });\r\n  };\r\n\r\n  sortAsc = () => {\r\n    instance.get(\"?order=asc\").then(response => {\r\n      const data = response.data;\r\n      this.setState({ data });\r\n    });\r\n  };\r\n\r\n  handlePageClick = data => {\r\n    const selectedPage = data.selected;\r\n    const offset = selectedPage * this.state.perPage;\r\n    this.setState({ currentPage: selectedPage, offset: offset }, () => {\r\n      this.setElementsForCurrentPage();\r\n    });\r\n  };\r\n\r\n  updateElements = filteredData => {\r\n    this.setState({ elements: filteredData });\r\n  };\r\n\r\n  render() {\r\n    const { elements } = this.state;\r\n    const { data } = this.state;\r\n\r\n    let paginationElement;\r\n    if (this.state.pageCount > 1) {\r\n      paginationElement = (\r\n        <ReactPaginate\r\n          previousLabel={\"prev\"}\r\n          nextLabel={\"next\"}\r\n          breakLabel={\"...\"}\r\n          breakClassName={\"break-me\"}\r\n          pageCount={this.state.pageCount}\r\n          onPageChange={this.handlePageClick}\r\n          containerClassName={\"pagination\"}\r\n          activeClassName={\"active\"}\r\n          pageClassName=\"page-item\"\r\n          pageLinkClassName=\"page-link\"\r\n          previousClassName=\"page-item\"\r\n          nextClassName=\"page-item\"\r\n          previousLinkClassName=\"page-link\"\r\n          nextLinkClassName=\"page-link\"\r\n          forcePage={this.state.currentPage}\r\n        />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <main>\r\n        <section className=\"launch\">\r\n          <div className=\"container\">\r\n            <h1 className=\"launch__title\">SpaceX launches</h1>\r\n            <div className=\"launch__top\">\r\n              <div className=\"launch__group\">\r\n                <button onClick={this.sortDesc} className=\"btn\">\r\n                  Sort ↓\r\n                </button>\r\n                <button onClick={this.sortAsc} className=\"btn btn-asc\">\r\n                  Sort ↑\r\n                </button>\r\n              </div>\r\n              <SearchForm data={data} updateElements={this.updateElements} />\r\n            </div>\r\n\r\n            <Table data={elements} />\r\n            {paginationElement}\r\n          </div>\r\n        </section>\r\n      </main>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}